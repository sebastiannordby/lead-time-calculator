@page "/"
@rendermode RenderMode.InteractiveServer
@using LeadTimeCalculator.Client.Data
@using Radzen
@using Radzen.Blazor

<PageTitle>@PageTitle</PageTitle>
<RadzenDialog />

<div class="bg-white">
    <div class="p-2 d-flex flex-column gap-3 border-1 border-bottom bg-white">
        <div class="d-flex flex-row gap-2 align-items-center">
            <RadzenLabel
                Text="Start production:"
                Style="width: 150px;"
                Component="_startProductionDate" />
            <RadzenDatePicker
                @bind-Value=@_startProductionDate
                Name="_startProductionDate"
                Disabled="_selectedCalendar is null"
                ShowCalendarWeek
                Placeholder="Start production" />
            <RadzenLabel
                class="mr-2"
                Text="Time to produce(workdays):"
                Component="_startProductionDateWorkdaysToComplete" />
            <RadzenNumeric
                ShowUpDown="false"
                TValue="double"
                @bind-Value=@_startProductionDateWorkdaysToComplete
                Disabled="_selectedCalendar is null"
                Name="_startProductionDateWorkdaysToComplete"
                Style="width: 115px"
                Placeholder="Fractional workdays" />
            <RadzenButton 
                Disabled="_selectedCalendar is null"
                Click="CalculateShippingDate">Calculate</RadzenButton>
        </div>
        <div class="d-flex flex-row gap-2 align-items-center">
            <RadzenLabel
                Text="Requested shipping:"
                Style="width: 150px;"
                Component="_requestedShippingDate" />
            <RadzenDatePicker
                @bind-Value=@_requestedShippingDate
                Name="_requestedShippingDate"
                Disabled="_selectedCalendar is null"
                ShowCalendarWeek
                Placeholder="Ship product at" />
            <RadzenLabel
                class="mr-2"
                Text="Time to produce(workdays):"
                Component="_requestShippingDateWorkdaysToComplete" />
            <RadzenNumeric
                ShowUpDown="false"
                TValue="double"
                @bind-Value=@_requestShippingDateWorkdaysToComplete
                Disabled="_selectedCalendar is null"
                Name="_requestShippingDateWorkdaysToComplete"
                Style="width: 115px"
                Placeholder="Fractional workdays" />
            <RadzenButton 
                Disabled="_selectedCalendar is null"
                Click="CalculateProductionStartDateForShipping">Calculate</RadzenButton>
        </div>
    </div>

    <RadzenMenu >
        <RadzenMenuItem 
            Text="Add Workday Calendar" 
            Click="AddCalendar"
            Disabled="_selectedCalendar is not null"
            Icon="add"  />
        <RadzenMenuItem 
            Text="Add Holiday" 
            Disabled="_selectedCalendar is null"
            Click="ShowAddHolidayDialogAsync"
            Icon="add"  />
        <RadzenMenuItem 
            Text="Add Exception Day" 
            Disabled="_selectedCalendar is null"
            Click="ShowAddExceptionDayDialogAsync"
            Icon="add"  />
    </RadzenMenu>

    @if(_selectedCalendar is not null) 
    {
        <RadzenScheduler 
            @ref="_scheduler"
            SlotRender=@OnSlotRender 
            style="height: 768px;" 
            TItem="Appointment" 
            Data=@_appointments 
            StartProperty="Start" 
            EndProperty="End"
            TextProperty="Text" 
            SelectedIndex="0"
            LoadData=@OnSchedulerLoadData
            AppointmentRender=@OnAppointmentRender>
                <RadzenMonthView />
        </RadzenScheduler>
    }
    else 
    {
        <div class="p-4">
            <h5 class="p-2 text-center text-body-emphasis">No selected workday calendar, create one to begin calculating lead times.</h5>
            <p class="text-center">Click <u style="cursor: pointer;" @onclick="AddCalendar">here</u> or "Add Workday Calendar" to start</p>
        </div>
    }
</div>



@code {
    Dictionary<DateTime, string> events = new Dictionary<DateTime, string>();

    void OnSlotRender(SchedulerSlotRenderEventArgs args)
    {
        // Highlight today in month view
        if (args.View.Text == "Month" && args.Start.Date == DateTime.Today)
        {
            args.Attributes["style"] = "background: var(--rz-scheduler-highlight-background-color, rgba(255,220,40,.2));";
        }
    }

    void OnAppointmentRender(SchedulerAppointmentRenderEventArgs<Appointment> args)
    {
        if (args.Data.Text.Contains("Holiday"))
        {
            args.Attributes["style"] = "background: red";
        }
        else if(args.Data.Text.Contains("Exception Day")) 
        {
            args.Attributes["style"] = "background: yellow; color: black;";
        }
    }
}